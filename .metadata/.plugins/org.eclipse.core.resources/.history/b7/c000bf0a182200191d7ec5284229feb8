<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE configuration  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
 <settings>
 	<setting name="mapUnderscoreToCamelCase" value="true"/> 
 	<!-- 防止数据库不能插入Null,默认为other -->
 	<setting name="jdbcTypeForNull" value="NULL"/>
 	<!-- 延迟加载设置，为了防止版本更新，我们建议手动开启 -->
 	<!-- <setting name="lazyLoadingEnabled" value="true"/>
	<setting name="aggressiveLazyLoading" value="false"/>  -->
	
	<setting name="cacheEnabled" value="true"/>
 </settings>
	
	<!-- 
	5、多数据库厂商驱动支持
		type="DB_VENDOR"：VendorDatabaseIdProvider
		 	作用就是得到数据库厂商的标识(驱动getDatabaseProductName())，mybatis就能根据数据库厂商标识来执行不同的sql;
		 	MySQL，Oracle，SQL Server,xxxx
	 -->
	<databaseIdProvider type="DB_VENDOR">
		<property name="MySQL" value="mysql"/>
		<property name="Oracle" value="oracle"/>
		<property name="SQL Server" value="sqlServer"/>
	</databaseIdProvider>
	
	<!-- 将写好的SQL映射文件（EmployeeMapper.xml）注册到全局配置文件中（mybatis-config.xml） -->
	
	<!--mappers：将sql映射注册到全局配置中 -->
	
	 <mappers>
	 <!-- mapper:注册一个sql映射
	 		resource:类路径下的资源
	 		mybatis/mapper/EmployeeMapper.xml
	 		url:网络路径下的资源或者本地磁盘下的资源路径
	 		file:///var/mappers/AuthorMapper.xml
	 		注册接口：
	 		  	class:引用（注册）接口
	 		  	1、有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下；
				2、没有sql映射文件，所有的sql都是利用注解写在接口上;
					推荐：
						比较重要的，复杂的Dao接口我们来写sql映射文件
						不重要，简单的Dao接口为了开发快速可以使用注解；
	  -->
	 
		<!-- <mapper resource="mybatis/mapper/EmployeeMapper.xml" /> -->
		<!--映射文件与接口放在同一包下，并且只加载接口直接找到实体类  -->
		<!-- <mapper class="com.atguigu.mybatis.dao.EmployeeMapper"/> -->
		
		<!--采取在接口方法上使用mybatis的注解方式映射加载类sql语句，  -->
		<!-- <mapper class="com.atguigu.mybatis.dao.EmployeeMapperAnnotation"/> -->
		<!-- 批量注册（建议采用） -->
		<package name="com.atguigu.mybatis.dao"/>
		
	</mappers> 
	<!-- 包扫描的方式 -->
	<!-- <package name="com.atguigu.mybatis.dao"/>-->
</configuration>
